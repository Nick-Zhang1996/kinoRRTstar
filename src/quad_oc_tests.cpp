#include "quad_oc_tests.h"

void QuadOptimalControl::test_cost(){
  double var;
  var = 1.41468 - cost(1.02351, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.02915, 1.31960, 8.22207, 4.26454, -3.84292, -2.74770, 0.13358, -0.15450, -0.30989);assert (abs(var)<0.01);

var = 1.97590 - cost(1.45939, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.99978, 1.96520, 6.93574, 6.83044, -1.11217, -1.11499, 0.26406, -0.05272, -0.21904);assert (abs(var)<0.01);

var = 1.97590 - cost(1.45939, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.99978, 1.96520, 6.93574, 6.83044, -1.11217, -1.11499, 0.26406, -0.05272, -0.21904);assert (abs(var)<0.01);

var = 2.16687 - cost(1.68244, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.10490, 4.65489, 4.60975, 5.28671, -1.93769, -3.10800, 0.18539, -0.18249, -0.23759);assert (abs(var)<0.01);

var = 2.16687 - cost(1.68244, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.10490, 4.65489, 4.60975, 5.28671, -1.93769, -3.10800, 0.18539, -0.18249, -0.23759);assert (abs(var)<0.01);

var = 1.49564 - cost(1.19655, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.46494, 4.81010, 9.39338, 3.09283, 4.34468, -2.56195, 0.02841, 0.08824, -0.34234);assert (abs(var)<0.01);

var = 1.49564 - cost(1.19655, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.46494, 4.81010, 9.39338, 3.09283, 4.34468, -2.56195, 0.02841, 0.08824, -0.34234);assert (abs(var)<0.01);

var = 2.84440 - cost(2.15662, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 0.83748, 3.51003, 4.76648, -2.46186, 3.19779, 5.85856, -0.09658, 0.12545, 0.22983);assert (abs(var)<0.01);

var = 2.84440 - cost(2.15662, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 0.83748, 3.51003, 4.76648, -2.46186, 3.19779, 5.85856, -0.09658, 0.12545, 0.22983);assert (abs(var)<0.01);

var = 2.12601 - cost(1.66776, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.39602, 4.99074, 4.52166, 4.15452, -1.18446, -3.22305, 0.16838, -0.17792, -0.26882);assert (abs(var)<0.01);

var = 2.12601 - cost(1.66776, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.39602, 4.99074, 4.52166, 4.15452, -1.18446, -3.22305, 0.16838, -0.17792, -0.26882);assert (abs(var)<0.01);

var = 2.49398 - cost(1.84009, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 2.48944, 4.25366, 7.82666, 2.70897, -2.44639, 4.77458, 0.17133, -0.31661, 0.00386);assert (abs(var)<0.01);

var = 2.49398 - cost(1.84009, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 2.48944, 4.25366, 7.82666, 2.70897, -2.44639, 4.77458, 0.17133, -0.31661, 0.00386);assert (abs(var)<0.01);

var = 1.55792 - cost(1.05586, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.85257, 6.08543, 8.93184, 2.68616, 5.42360, 1.21962, -0.05812, 0.32495, -0.10508);assert (abs(var)<0.01);

var = 1.55792 - cost(1.05586, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.85257, 6.08543, 8.93184, 2.68616, 5.42360, 1.21962, -0.05812, 0.32495, -0.10508);assert (abs(var)<0.01);

var = 2.71758 - cost(2.10050, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 1.89610, 4.15257, 3.22862, -0.24365, 5.04790, 2.88119, -0.01167, 0.24183, 0.13803);assert (abs(var)<0.01);

var = 2.71758 - cost(2.10050, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 1.89610, 4.15257, 3.22862, -0.24365, 5.04790, 2.88119, -0.01167, 0.24183, 0.13803);assert (abs(var)<0.01);

var = 1.95154 - cost(1.45010, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.28282, 0.93172, 6.85325, 5.59219, -3.09986, -1.16740, 0.23753, -0.11897, -0.23156);assert (abs(var)<0.01);

var = 1.95154 - cost(1.45010, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.28282, 0.93172, 6.85325, 5.59219, -3.09986, -1.16740, 0.23753, -0.11897, -0.23156);assert (abs(var)<0.01);

var = 2.56386 - cost(1.96847, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.14354, 6.16663, 5.28450, 3.74793, 1.17857, 3.23720, 0.27611, -0.27031, 0.02302);assert (abs(var)<0.01);

var = 2.56386 - cost(1.96847, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.14354, 6.16663, 5.28450, 3.74793, 1.17857, 3.23720, 0.27611, -0.27031, 0.02302);assert (abs(var)<0.01);

var = 1.92105 - cost(1.43569, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.99379, 1.06841, 6.18575, 6.54259, -2.66386, -2.66108, 0.22937, -0.08989, -0.23925);assert (abs(var)<0.01);

var = 1.92105 - cost(1.43569, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.99379, 1.06841, 6.18575, 6.54259, -2.66386, -2.66108, 0.22937, -0.08989, -0.23925);assert (abs(var)<0.01);

var = 2.39923 - cost(1.87866, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 5.16445, 5.67100, 3.52067, 6.45419, -1.60623, -2.01331, 0.21427, -0.21469, -0.15760);assert (abs(var)<0.01);

var = 2.39923 - cost(1.87866, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 5.16445, 5.67100, 3.52067, 6.45419, -1.60623, -2.01331, 0.21427, -0.21469, -0.15760);assert (abs(var)<0.01);

var = 1.43139 - cost(1.04622, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.58339, 3.06294, 8.50312, 3.96237, -0.57245, -1.48628, 0.16711, -0.07925, -0.36548);assert (abs(var)<0.01);

var = 1.43139 - cost(1.04622, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.58339, 3.06294, 8.50312, 3.96237, -0.57245, -1.48628, 0.16711, -0.07925, -0.36548);assert (abs(var)<0.01);

var = 2.50720 - cost(1.83536, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 1.69235, 6.33349, 8.05086, -6.17064, -0.68757, 2.49296, -0.32964, -0.05943, -0.02475);assert (abs(var)<0.01);

var = 2.50720 - cost(1.83536, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 1.69235, 6.33349, 8.05086, -6.17064, -0.68757, 2.49296, -0.32964, -0.05943, -0.02475);assert (abs(var)<0.01);

var = 1.45355 - cost(1.05478, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.47024, 0.45281, 7.50992, 4.62761, -5.04014, -4.30778, 0.11926, -0.15670, -0.29413);assert (abs(var)<0.01);

var = 1.45355 - cost(1.05478, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.47024, 0.45281, 7.50992, 4.62761, -5.04014, -4.30778, 0.11926, -0.15670, -0.29413);assert (abs(var)<0.01);

var = 2.46171 - cost(1.70251, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 2.30603, 3.15660, 9.80796, 2.06085, 0.35425, 7.87069, 0.29459, -0.13607, 0.00228);assert (abs(var)<0.01);

var = 2.46171 - cost(1.70251, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 2.30603, 3.15660, 9.80796, 2.06085, 0.35425, 7.87069, 0.29459, -0.13607, 0.00228);assert (abs(var)<0.01);

var = 2.10854 - cost(1.55608, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 2.70752, 2.15600, 7.74729, 5.04543, -0.80456, 1.65550, 0.30971, -0.06401, -0.19835);assert (abs(var)<0.01);

var = 2.10854 - cost(1.55608, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 2.70752, 2.15600, 7.74729, 5.04543, -0.80456, 1.65550, 0.30971, -0.06401, -0.19835);assert (abs(var)<0.01);

var = 2.54018 - cost(1.91105, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 5.22006, 5.89942, 7.45385, 3.44549, -1.91057, 4.22556, -0.03159, -0.28150, 0.09091);assert (abs(var)<0.01);

var = 2.54018 - cost(1.91105, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 5.22006, 5.89942, 7.45385, 3.44549, -1.91057, 4.22556, -0.03159, -0.28150, 0.09091);assert (abs(var)<0.01);

var = 2.55303 - cost(1.89340, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.00771, 4.26563, 7.33088, -3.31400, -1.61581, 3.37622, -0.31811, -0.21959, -0.04558);assert (abs(var)<0.01);

var = 2.55303 - cost(1.89340, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.00771, 4.26563, 7.33088, -3.31400, -1.61581, 3.37622, -0.31811, -0.21959, -0.04558);assert (abs(var)<0.01);

var = 2.47770 - cost(1.86253, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.24487, 1.46688, 6.49803, 5.47260, -0.64101, 3.62446, 0.30827, -0.01359, -0.00945);assert (abs(var)<0.01);

var = 2.47770 - cost(1.86253, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.24487, 1.46688, 6.49803, 5.47260, -0.64101, 3.62446, 0.30827, -0.01359, -0.00945);assert (abs(var)<0.01);

var = 2.79220 - cost(2.13616, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.43128, 3.71421, 4.41232, 4.92670, 3.47363, 4.88828, 0.17726, 0.12498, 0.17588);assert (abs(var)<0.01);

var = 2.79220 - cost(2.13616, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.43128, 3.71421, 4.41232, 4.92670, 3.47363, 4.88828, 0.17726, 0.12498, 0.17588);assert (abs(var)<0.01);

var = 2.72406 - cost(2.10795, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.90570, 3.55002, 3.45976, 4.26137, 3.46603, 3.26418, 0.18599, 0.15128, 0.14247);assert (abs(var)<0.01);

var = 2.72406 - cost(2.10795, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.90570, 3.55002, 3.45976, 4.26137, 3.46603, 3.26418, 0.18599, 0.15128, 0.14247);assert (abs(var)<0.01);

var = 2.41329 - cost(1.77738, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 1.36516, 2.13226, 7.71898, 2.18290, -1.01109, 4.87479, 0.38568, -0.15658, -0.11202);assert (abs(var)<0.01);

var = 2.41329 - cost(1.77738, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 1.36516, 2.13226, 7.71898, 2.18290, -1.01109, 4.87479, 0.38568, -0.15658, -0.11202);assert (abs(var)<0.01);

var = 2.57870 - cost(1.91910, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.19391, 5.87915, 8.22722, -0.54237, -1.79714, 5.01643, -0.27083, -0.18277, 0.11081);assert (abs(var)<0.01);

var = 2.57870 - cost(1.91910, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.19391, 5.87915, 8.22722, -0.54237, -1.79714, 5.01643, -0.27083, -0.18277, 0.11081);assert (abs(var)<0.01);

var = 2.84110 - cost(2.15693, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 2.09503, 4.44565, 4.90553, 0.19310, 4.96937, 5.90381, 0.00699, 0.17976, 0.21356);assert (abs(var)<0.01);

var = 2.84110 - cost(2.15693, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 2.09503, 4.44565, 4.90553, 0.19310, 4.96937, 5.90381, 0.00699, 0.17976, 0.21356);assert (abs(var)<0.01);

var = 2.61345 - cost(1.95432, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.85882, 5.58302, 6.78501, -0.37001, 3.45518, 5.13935, -0.41662, -0.00174, 0.06741);assert (abs(var)<0.01);

var = 2.61345 - cost(1.95432, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.85882, 5.58302, 6.78501, -0.37001, 3.45518, 5.13935, -0.41662, -0.00174, 0.06741);assert (abs(var)<0.01);

var = 1.41884 - cost(1.08282, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.14055, 3.73375, 8.08372, 2.97554, 0.80442, -2.45716, 0.12391, -0.02460, -0.38869);assert (abs(var)<0.01);

var = 1.41884 - cost(1.08282, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.14055, 3.73375, 8.08372, 2.97554, 0.80442, -2.45716, 0.12391, -0.02460, -0.38869);assert (abs(var)<0.01);

var = 1.95894 - cost(1.57920, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.21379, 7.37948, 5.55696, 2.14014, 1.63448, -3.91565, 0.07276, -0.12627, -0.36909);assert (abs(var)<0.01);

var = 1.95894 - cost(1.57920, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.21379, 7.37948, 5.55696, 2.14014, 1.63448, -3.91565, 0.07276, -0.12627, -0.36909);assert (abs(var)<0.01);

var = 2.53774 - cost(1.91299, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 1.95179, 1.06357, 6.18699, 2.84189, -1.94094, 4.30478, 0.28489, -0.10326, 0.03026);assert (abs(var)<0.01);

var = 2.53774 - cost(1.91299, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 1.95179, 1.06357, 6.18699, 2.84189, -1.94094, 4.30478, 0.28489, -0.10326, 0.03026);assert (abs(var)<0.01);

var = 2.36139 - cost(1.71770, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 2.91353, 0.43955, 8.08830, 2.02603, -1.23132, 5.21790, -0.16139, 0.13763, 0.17400);assert (abs(var)<0.01);

var = 2.36139 - cost(1.71770, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 2.91353, 0.43955, 8.08830, 2.02603, -1.23132, 5.21790, -0.16139, 0.13763, 0.17400);assert (abs(var)<0.01);

var = 2.71257 - cost(2.09472, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.99444, 3.93708, 3.40167, 6.06685, 3.92459, 2.83983, 0.21821, 0.14116, 0.10214);assert (abs(var)<0.01);

var = 2.71257 - cost(2.09472, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 4.99444, 3.93708, 3.40167, 6.06685, 3.92459, 2.83983, 0.21821, 0.14116, 0.10214);assert (abs(var)<0.01);

var = 2.71454 - cost(2.09324, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 1.85187, 4.83544, 3.21797, -0.32264, 6.17605, 2.65294, -0.01338, 0.25604, 0.10998);assert (abs(var)<0.01);

var = 2.71454 - cost(2.09324, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 1.85187, 4.83544, 3.21797, -0.32264, 6.17605, 2.65294, -0.01338, 0.25604, 0.10998);assert (abs(var)<0.01);

var = 2.65171 - cost(2.06365, 4.07745, 3.75177, 6.30856, -2.81259, -1.59230, 6.21126, -0.23957, -0.15912, 0.16608, 3.30866, 4.95224, 2.59175, 2.79282, 6.30040, 1.26286, 0.11123, 0.25094, 0.05030);assert (abs(var)<0.01);

}


void QuadOptimalControl::test_costPartialFreeFinalState(){
  double var;
  var = 1.33176 - costPartialFreeFinalState(1.04097, 4.26237, 4.45418, 7.45189, 2.36806, 0.82087, 3.61321, 0.20713, 0.39560, -0.12254, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.33176 - costPartialFreeFinalState(1.04097, 4.26237, 4.45418, 7.45189, 2.36806, 0.82087, 3.61321, 0.20713, 0.39560, -0.12254, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.77359 - costPartialFreeFinalState(1.35529, 2.46809, 0.95172, 6.73540, -5.08529, -6.56202, -4.36090, -0.18043, -0.18003, -0.19067, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.77359 - costPartialFreeFinalState(1.35529, 2.46809, 0.95172, 6.73540, -5.08529, -6.56202, -4.36090, -0.18043, -0.18003, -0.19067, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.06922 - costPartialFreeFinalState(0.83524, 3.26100, 2.03313, 3.43980, 3.22675, 0.08478, 3.68429, 0.18334, 0.00482, 0.20934, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.06922 - costPartialFreeFinalState(0.83524, 3.26100, 2.03313, 3.43980, 3.22675, 0.08478, 3.68429, 0.18334, 0.00482, 0.20934, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.56370 - costPartialFreeFinalState(1.21807, 4.73605, 4.30906, 8.47240, 3.28658, 0.78462, 5.16419, 0.20858, 0.28276, 0.01206, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.56370 - costPartialFreeFinalState(1.21807, 4.73605, 4.30906, 8.47240, 3.28658, 0.78462, 5.16419, 0.20858, 0.28276, 0.01206, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.41495 - costPartialFreeFinalState(1.09177, 1.76445, 3.78498, 7.69505, -4.73912, -0.56549, 2.87299, -0.29794, 0.18703, -0.13055, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.41495 - costPartialFreeFinalState(1.09177, 1.76445, 3.78498, 7.69505, -4.73912, -0.56549, 2.87299, -0.29794, 0.18703, -0.13055, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.02650 - costPartialFreeFinalState(0.79690, 0.56949, 2.63856, 7.48558, 1.59179, -2.05923, -3.00113, 0.27431, -0.06579, -0.25080, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.02650 - costPartialFreeFinalState(0.79690, 0.56949, 2.63856, 7.48558, 1.59179, -2.05923, -3.00113, 0.27431, -0.06579, -0.25080, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.52102 - costPartialFreeFinalState(1.19514, 4.85862, 5.29312, 7.92373, 3.04183, 3.42537, 2.39664, 0.13788, 0.32493, -0.11977, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.52102 - costPartialFreeFinalState(1.19514, 4.85862, 5.29312, 7.92373, 3.04183, 3.42537, 2.39664, 0.13788, 0.32493, -0.11977, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.41837 - costPartialFreeFinalState(1.10258, 1.30063, 4.32319, 6.89734, -4.96083, 1.26599, -0.13962, -0.21537, 0.20827, -0.21960, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.41837 - costPartialFreeFinalState(1.10258, 1.30063, 4.32319, 6.89734, -4.96083, 1.26599, -0.13962, -0.21537, 0.20827, -0.21960, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.09284 - costPartialFreeFinalState(0.86810, 1.57310, 3.10656, 3.24245, -1.13300, 2.93679, 3.29746, -0.06913, 0.17919, 0.20120, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.09284 - costPartialFreeFinalState(0.86810, 1.57310, 3.10656, 3.24245, -1.13300, 2.93679, 3.29746, -0.06913, 0.17919, 0.20120, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.40784 - costPartialFreeFinalState(1.09635, 3.49679, 4.70388, 8.05090, -0.10893, 1.75086, 4.76055, -0.01348, 0.40782, -0.01649, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.40784 - costPartialFreeFinalState(1.09635, 3.49679, 4.70388, 8.05090, -0.10893, 1.75086, 4.76055, -0.01348, 0.40782, -0.01649, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.35386 - costPartialFreeFinalState(1.04409, 1.20565, 4.55030, 8.79422, -4.58537, -1.91484, -2.70095, -0.16374, -0.13763, -0.27298, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.35386 - costPartialFreeFinalState(1.04409, 1.20565, 4.55030, 8.79422, -4.58537, -1.91484, -2.70095, -0.16374, -0.13763, -0.27298, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.35213 - costPartialFreeFinalState(1.04967, 4.25194, 4.14766, 5.01671, -0.50568, 5.00552, 0.49311, -0.18938, 0.24723, -0.16243, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.35213 - costPartialFreeFinalState(1.04967, 4.25194, 4.14766, 5.01671, -0.50568, 5.00552, 0.49311, -0.18938, 0.24723, -0.16243, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.19662 - costPartialFreeFinalState(0.89702, 4.08096, 3.40586, 5.96290, -0.64559, 3.68297, 3.60819, -0.25319, 0.23331, -0.00728, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.19662 - costPartialFreeFinalState(0.89702, 4.08096, 3.40586, 5.96290, -0.64559, 3.68297, 3.60819, -0.25319, 0.23331, -0.00728, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.34471 - costPartialFreeFinalState(1.02549, 0.66157, 1.27822, 6.80035, -0.85552, 3.02118, 5.27639, 0.02621, 0.30025, 0.08739, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.34471 - costPartialFreeFinalState(1.02549, 0.66157, 1.27822, 6.80035, -0.85552, 3.02118, 5.27639, 0.02621, 0.30025, 0.08739, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.50600 - costPartialFreeFinalState(1.15898, 2.52503, 6.36740, 9.03567, -6.99721, -1.10395, -0.06551, -0.29867, -0.13675, -0.07208, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.50600 - costPartialFreeFinalState(1.15898, 2.52503, 6.36740, 9.03567, -6.99721, -1.10395, -0.06551, -0.29867, -0.13675, -0.07208, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.27363 - costPartialFreeFinalState(0.98924, 2.37198, 4.76791, 7.42697, -4.29656, 0.59675, 0.97595, -0.25538, -0.22111, -0.18617, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.27363 - costPartialFreeFinalState(0.98924, 2.37198, 4.76791, 7.42697, -4.29656, 0.59675, 0.97595, -0.25538, -0.22111, -0.18617, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.34348 - costPartialFreeFinalState(1.05739, 0.05731, 0.79964, 5.67705, -2.97756, 1.75397, 3.51895, -0.11888, 0.32101, -0.00734, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.34348 - costPartialFreeFinalState(1.05739, 0.05731, 0.79964, 5.67705, -2.97756, 1.75397, 3.51895, -0.11888, 0.32101, -0.00734, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.05330 - costPartialFreeFinalState(0.80048, 1.75862, 3.31577, 8.47956, 3.53154, 2.43340, -0.45840, 0.24308, -0.03572, -0.31901, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.05330 - costPartialFreeFinalState(0.80048, 1.75862, 3.31577, 8.47956, 3.53154, 2.43340, -0.45840, 0.24308, -0.03572, -0.31901, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.47482 - costPartialFreeFinalState(1.14540, 5.29343, 1.81177, 5.39712, 4.52929, -0.88582, 3.84295, 0.14551, -0.11051, 0.01497, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.47482 - costPartialFreeFinalState(1.14540, 5.29343, 1.81177, 5.39712, 4.52929, -0.88582, 3.84295, 0.14551, -0.11051, 0.01497, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.45007 - costPartialFreeFinalState(1.11132, 4.47670, 4.24421, 6.21795, 0.07368, 5.30953, 3.46984, -0.16451, 0.26951, -0.01316, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.45007 - costPartialFreeFinalState(1.11132, 4.47670, 4.24421, 6.21795, 0.07368, 5.30953, 3.46984, -0.16451, 0.26951, -0.01316, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.32897 - costPartialFreeFinalState(0.96226, 1.79314, 3.08662, 5.29214, -0.43319, 2.27553, 6.89418, -0.01663, 0.08733, 0.26459, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.32897 - costPartialFreeFinalState(0.96226, 1.79314, 3.08662, 5.29214, -0.43319, 2.27553, 6.89418, -0.01663, 0.08733, 0.26459, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.41551 - costPartialFreeFinalState(1.09313, 2.72033, 0.34933, 4.13837, 1.62261, -3.71830, 4.81689, 0.07185, -0.16464, 0.21328, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.41551 - costPartialFreeFinalState(1.09313, 2.72033, 0.34933, 4.13837, 1.62261, -3.71830, 4.81689, 0.07185, -0.16464, 0.21328, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.20800 - costPartialFreeFinalState(0.88932, 1.27512, 1.68444, 6.64876, 0.68907, 3.92580, 4.43634, 0.09619, 0.31006, 0.03809, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.20800 - costPartialFreeFinalState(0.88932, 1.27512, 1.68444, 6.64876, 0.68907, 3.92580, 4.43634, 0.09619, 0.31006, 0.03809, 2.86408, 3.07105, 6.80317); assert (abs(var)<0.01);
var = 1.60339 - costPartialFreeFinalState(1.18478, 16.24238, 6.42030, 1.84273, -4.25007, 8.08556, -2.79275, -0.20794, 0.23960, -0.08275, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.60339 - costPartialFreeFinalState(1.18478, 16.24238, 6.42030, 1.84273, -4.25007, 8.08556, -2.79275, -0.20794, 0.23960, -0.08275, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.22997 - costPartialFreeFinalState(0.92992, 16.57848, 7.24963, 3.37294, 1.09573, 2.39003, -5.52507, 0.20858, -0.21107, -0.22711, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.22997 - costPartialFreeFinalState(0.92992, 16.57848, 7.24963, 3.37294, 1.09573, 2.39003, -5.52507, 0.20858, -0.21107, -0.22711, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.26975 - costPartialFreeFinalState(0.93270, 16.67998, 5.21829, 1.15485, -2.65547, 1.15150, -6.00869, -0.14738, -0.30456, -0.11283, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.26975 - costPartialFreeFinalState(0.93270, 16.67998, 5.21829, 1.15485, -2.65547, 1.15150, -6.00869, -0.14738, -0.30456, -0.11283, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.56685 - costPartialFreeFinalState(1.14827, 15.85137, 7.99000, 2.05029, -0.28749, -0.79924, -9.49350, -0.02256, -0.11835, -0.31586, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.56685 - costPartialFreeFinalState(1.14827, 15.85137, 7.99000, 2.05029, -0.28749, -0.79924, -9.49350, -0.02256, -0.11835, -0.31586, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.50288 - costPartialFreeFinalState(1.17854, 16.21631, 4.67765, 3.80410, 3.96397, 3.00651, 2.73309, -0.02778, 0.18960, 0.24653, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.50288 - costPartialFreeFinalState(1.17854, 16.21631, 4.67765, 3.80410, 3.96397, 3.00651, 2.73309, -0.02778, 0.18960, 0.24653, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.55020 - costPartialFreeFinalState(1.17374, 11.72351, 6.35845, 0.29218, 0.97946, 7.16902, -3.48608, 0.01996, 0.34220, -0.00170, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.55020 - costPartialFreeFinalState(1.17374, 11.72351, 6.35845, 0.29218, 0.97946, 7.16902, -3.48608, 0.01996, 0.34220, -0.00170, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.36797 - costPartialFreeFinalState(1.05091, 11.49493, 6.42184, 2.49031, -1.38697, 2.23863, -5.78630, -0.22402, -0.28407, -0.16760, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.36797 - costPartialFreeFinalState(1.05091, 11.49493, 6.42184, 2.49031, -1.38697, 2.23863, -5.78630, -0.22402, -0.28407, -0.16760, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 0.83315 - costPartialFreeFinalState(0.57635, 16.78077, 6.29968, 2.46026, -2.40059, 0.50156, -5.09593, -0.21572, -0.08653, -0.26764, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 0.83315 - costPartialFreeFinalState(0.57635, 16.78077, 6.29968, 2.46026, -2.40059, 0.50156, -5.09593, -0.21572, -0.08653, -0.26764, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 0.99938 - costPartialFreeFinalState(0.73718, 12.77431, 3.78151, 2.55088, 3.77657, 1.48993, -4.90260, 0.25787, -0.16656, 0.01992, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 0.99938 - costPartialFreeFinalState(0.73718, 12.77431, 3.78151, 2.55088, 3.77657, 1.48993, -4.90260, 0.25787, -0.16656, 0.01992, 14.69314, 6.48020, 0.67831); assert (abs(var)<0.01);
var = 1.22911 - costPartialFreeFinalState(0.88908, 3.51210, 5.18055, 4.96826, 0.07591, -3.52652, 4.95198, -0.05487, -0.31380, 0.15078, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 4.35026 - costPartialFreeFinalState(0.22715, 3.51210, 5.18055, 4.96826, 0.07591, -3.52652, 4.95198, -0.05487, -0.31380, 0.15078, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 2.56518 - costPartialFreeFinalState(0.15069, 3.51210, 5.18055, 4.96826, 0.07591, -3.52652, 4.95198, -0.05487, -0.31380, 0.15078, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.22911 - costPartialFreeFinalState(0.88908, 3.51210, 5.18055, 4.96826, 0.07591, -3.52652, 4.95198, -0.05487, -0.31380, 0.15078, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.34562 - costPartialFreeFinalState(1.03750, 2.71703, 4.41895, 2.22084, 1.66979, 5.63317, 0.51428, 0.07891, 0.26621, 0.02430, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.34562 - costPartialFreeFinalState(1.03750, 2.71703, 4.41895, 2.22084, 1.66979, 5.63317, 0.51428, 0.07891, 0.26621, 0.02430, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.34261 - costPartialFreeFinalState(1.05054, 4.26237, 4.45418, 7.45189, 2.36806, 0.82087, 3.61321, 0.20713, 0.39560, -0.12254, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.34261 - costPartialFreeFinalState(1.05054, 4.26237, 4.45418, 7.45189, 2.36806, 0.82087, 3.61321, 0.20713, 0.39560, -0.12254, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.83596 - costPartialFreeFinalState(1.41637, 2.46809, 0.95172, 6.73540, -5.08529, -6.56202, -4.36090, -0.18043, -0.18003, -0.19067, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.83596 - costPartialFreeFinalState(1.41637, 2.46809, 0.95172, 6.73540, -5.08529, -6.56202, -4.36090, -0.18043, -0.18003, -0.19067, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.61700 - costPartialFreeFinalState(1.26175, 5.69316, 5.74951, 8.06544, 4.39546, 4.32726, 1.91828, 0.15842, 0.28985, -0.11221, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.61700 - costPartialFreeFinalState(1.26175, 5.69316, 5.74951, 8.06544, 4.39546, 4.32726, 1.91828, 0.15842, 0.28985, -0.11221, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.11043 - costPartialFreeFinalState(0.86269, 3.26100, 2.03313, 3.43980, 3.22675, 0.08478, 3.68429, 0.18334, 0.00482, 0.20934, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.11043 - costPartialFreeFinalState(0.86269, 3.26100, 2.03313, 3.43980, 3.22675, 0.08478, 3.68429, 0.18334, 0.00482, 0.20934, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.58672 - costPartialFreeFinalState(1.23944, 4.73605, 4.30906, 8.47240, 3.28658, 0.78462, 5.16419, 0.20858, 0.28276, 0.01206, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.58672 - costPartialFreeFinalState(1.23944, 4.73605, 4.30906, 8.47240, 3.28658, 0.78462, 5.16419, 0.20858, 0.28276, 0.01206, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.63952 - costPartialFreeFinalState(1.27194, 4.26319, 7.21997, 7.05025, 1.30166, 6.86194, -0.63116, 0.03585, 0.30270, -0.16255, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.63952 - costPartialFreeFinalState(1.27194, 4.26319, 7.21997, 7.05025, 1.30166, 6.86194, -0.63116, 0.03585, 0.30270, -0.16255, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.52381 - costPartialFreeFinalState(1.19256, 1.76445, 3.78498, 7.69505, -4.73912, -0.56549, 2.87299, -0.29794, 0.18703, -0.13055, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.52381 - costPartialFreeFinalState(1.19256, 1.76445, 3.78498, 7.69505, -4.73912, -0.56549, 2.87299, -0.29794, 0.18703, -0.13055, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.64979 - costPartialFreeFinalState(1.27934, 0.21136, 5.22007, 3.83859, -5.95804, -3.59493, 2.42665, -0.21414, -0.26033, 0.05336, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.64979 - costPartialFreeFinalState(1.27934, 0.21136, 5.22007, 3.83859, -5.95804, -3.59493, 2.42665, -0.21414, -0.26033, 0.05336, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.69568 - costPartialFreeFinalState(1.31586, 4.27032, 7.53660, 7.12053, 1.28428, 7.34132, -0.58958, 0.03383, 0.30295, -0.15441, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.69568 - costPartialFreeFinalState(1.31586, 4.27032, 7.53660, 7.12053, 1.28428, 7.34132, -0.58958, 0.03383, 0.30295, -0.15441, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.46197 - costPartialFreeFinalState(1.14359, 4.85862, 5.29312, 7.92373, 3.04183, 3.42537, 2.39664, 0.13788, 0.32493, -0.11977, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.46197 - costPartialFreeFinalState(1.14359, 4.85862, 5.29312, 7.92373, 3.04183, 3.42537, 2.39664, 0.13788, 0.32493, -0.11977, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.74174 - costPartialFreeFinalState(1.34807, 4.92404, 7.57983, 5.94863, 2.32304, 7.21359, -2.74923, 0.05680, 0.27182, -0.19439, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.74174 - costPartialFreeFinalState(1.34807, 4.92404, 7.57983, 5.94863, 2.32304, 7.21359, -2.74923, 0.05680, 0.27182, -0.19439, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.45137 - costPartialFreeFinalState(1.13472, 1.30063, 4.32319, 6.89734, -4.96083, 1.26599, -0.13962, -0.21537, 0.20827, -0.21960, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.45137 - costPartialFreeFinalState(1.13472, 1.30063, 4.32319, 6.89734, -4.96083, 1.26599, -0.13962, -0.21537, 0.20827, -0.21960, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.05711 - costPartialFreeFinalState(0.83347, 1.57310, 3.10656, 3.24245, -1.13300, 2.93679, 3.29746, -0.06913, 0.17919, 0.20120, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.05711 - costPartialFreeFinalState(0.83347, 1.57310, 3.10656, 3.24245, -1.13300, 2.93679, 3.29746, -0.06913, 0.17919, 0.20120, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.44796 - costPartialFreeFinalState(1.13286, 3.49679, 4.70388, 8.05090, -0.10893, 1.75086, 4.76055, -0.01348, 0.40782, -0.01649, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.44796 - costPartialFreeFinalState(1.13286, 3.49679, 4.70388, 8.05090, -0.10893, 1.75086, 4.76055, -0.01348, 0.40782, -0.01649, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.82354 - costPartialFreeFinalState(1.41123, 5.33534, 7.82877, 5.38028, 2.90122, 7.46535, -3.73348, 0.06612, 0.25792, -0.20314, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.82354 - costPartialFreeFinalState(1.41123, 5.33534, 7.82877, 5.38028, 2.90122, 7.46535, -3.73348, 0.06612, 0.25792, -0.20314, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.14617 - costPartialFreeFinalState(0.84312, 4.25194, 4.14766, 5.01671, -0.50568, 5.00552, 0.49311, -0.18938, 0.24723, -0.16243, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.14617 - costPartialFreeFinalState(0.84312, 4.25194, 4.14766, 5.01671, -0.50568, 5.00552, 0.49311, -0.18938, 0.24723, -0.16243, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.16075 - costPartialFreeFinalState(0.85904, 4.08096, 3.40586, 5.96290, -0.64559, 3.68297, 3.60819, -0.25319, 0.23331, -0.00728, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 1.16075 - costPartialFreeFinalState(0.85904, 4.08096, 3.40586, 5.96290, -0.64559, 3.68297, 3.60819, -0.25319, 0.23331, -0.00728, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);
var = 0.91854 - costPartialFreeFinalState(0.73751, 3.48205, 6.31263, 3.56818, 0.74434, 0.49879, 3.48474, -0.06935, -0.38269, 0.21927, 3.62305, 4.60456, 5.60741); assert (abs(var)<0.01);

}
void QuadOptimalControl::test_interiorPosition(){
  double * p_buffer;
  p_buffer = interiorPosition(1.24044, 15.61412, 8.38844, 7.62455, 2.92156, -0.17087, 4.84483, 0.25496, -0.23822, 0.07501, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 15.94594)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.36634)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.14977)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 16.28255)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.33506)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.56736)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 16.61859)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 8.29269)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.82094)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.94337)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 8.24095)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.90043)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.24328)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 8.18405)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.83021)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.50419)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.12755)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.65732)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.71392)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.07728)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.43970)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.86463)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.03816)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.23432)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.95522)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.01310)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.08547)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99378)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.00188)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.01289)<0.01) ;
p_buffer = interiorPosition(1.39235, 15.20091, 5.65271, 7.73933, 3.50493, -0.88573, 2.55338, 0.34169, -0.11968, -0.11894, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 15.64545)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 5.56011)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.04937)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 16.08365)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 5.56622)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.29610)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 16.50211)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 5.71677)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.44779)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.88696)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 6.00970)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.49892)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.22518)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 6.40849)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.46357)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.50602)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 6.85552)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.36867)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.72229)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.28538)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.24731)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.87177)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.63825)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.13204)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.95854)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.87318)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.04823)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99436)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.98147)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.00728)<0.01) ;
p_buffer = interiorPosition(1.48595, 17.42014, 7.92206, 8.53440, 4.23475, -1.76524, 4.37237, -0.52457, -0.55607, 0.27348, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 17.96734)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 7.69074)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 9.09757)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 18.40414)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 7.51075)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.51578)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 18.67863)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 7.41420)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.71345)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 18.78223)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 7.40719)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.68053)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 18.73865)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 7.47650)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.45542)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.59286)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.59624)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 9.10778)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.40001)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.73455)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.72141)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.21442)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.86023)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.37712)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.07853)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.94947)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.13559)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.01188)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.99243)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.02022)<0.01) ;
p_buffer = interiorPosition(1.52594, 14.98173, 8.94988, 7.30754, 1.29702, 2.26582, 5.54334, 0.24310, -0.15633, 0.16316, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 15.17523)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 9.24311)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.04855)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 15.42699)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 9.43604)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.64390)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 15.75647)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.48172)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.01574)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.15400)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.37729)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.14918)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 16.58961)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.15218)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.07628)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.02189)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.85628)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.86014)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.40686)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.54807)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.57890)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.70682)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.28281)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.30984)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.89923)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.10066)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.11337)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.98552)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01489)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.01713)<0.01) ;
p_buffer = interiorPosition(1.31785, 16.89751, 5.77025, 5.13972, 6.08011, 1.60018, 3.62171, 0.09642, -0.00588, 0.05027, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 17.60176)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 5.96809)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 5.57356)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 18.18170)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 6.19483)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 6.00350)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 18.57044)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 6.45981)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 6.42013)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 18.75338)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 6.75568)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 6.81067)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 18.75516)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 7.06364)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.16106)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.62666)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.35877)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.45809)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.43186)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.61521)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.69143)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.23489)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.81147)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.85576)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.08695)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.93568)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.95282)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.01326)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.99081)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.99351)<0.01) ;
p_buffer = interiorPosition(1.80103, 17.92177, 8.30035, 4.90043, -3.50197, 3.26819, -3.65790, -0.28955, 0.05032, -0.21980, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 17.37109)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.81057)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 4.34576)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 16.94610)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 9.19422)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 4.01926)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 16.71535)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.38672)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 4.03319)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.69004)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.37933)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 4.39315)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 16.83883)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.20464)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 5.02690)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.10261)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.92192)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 5.81326)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.40934)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.60264)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 6.61093)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.68881)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.31590)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.28732)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.88745)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.11381)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.74746)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.98314)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01700)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.96278)<0.01) ;
p_buffer = interiorPosition(1.20976, 18.30886, 4.31660, 7.36377, 0.70187, 4.67573, 4.23130, -0.08025, 0.32775, -0.01012, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 18.38029)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 4.83384)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.81286)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 18.42460)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 5.35689)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.18001)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 18.42932)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 5.87729)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.42199)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 18.39394)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 6.37868)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.52983)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 18.32668)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 6.84038)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.52021)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.24128)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.24112)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.42691)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.15373)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.56261)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.29219)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.07905)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.79323)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.15819)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.02806)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.93166)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.05836)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.00414)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.99051)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.00887)<0.01) ;
p_buffer = interiorPosition(1.17441, 16.30136, 5.70435, 5.87732, 2.88576, 1.06012, 5.58102, -0.26272, -0.06272, 0.24983, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 16.60593)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 5.82729)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 6.46201)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 16.89594)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 5.99826)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 6.98450)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 17.16162)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 6.23655)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.40615)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 17.39530)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 6.53614)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.71237)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.59153)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 6.87322)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.90732)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.74729)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.21368)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.00857)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.86209)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.52066)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.04188)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.93815)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.76202)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.03586)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.98057)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.91789)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.01672)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99743)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.98816)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.00294)<0.01) ;
p_buffer = interiorPosition(1.69732, 17.97894, 8.44467, 5.45260, -3.32322, 3.71988, -2.61500, -0.30539, 0.06871, -0.20244, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 17.48602)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.99123)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 5.08158)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 17.10383)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 9.39820)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 4.87862)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 16.89315)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.59451)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 4.92605)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.86416)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.57100)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 5.22695)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 16.98948)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.36419)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 5.72674)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.21720)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 9.04009)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 6.33465)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.48393)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.67811)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 6.94528)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.72779)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.35477)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.46011)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.90146)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.12763)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.80903)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.98523)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01904)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.97190)<0.01) ;
p_buffer = interiorPosition(1.06297, 18.68374, 7.17618, 4.76403, 1.24816, 1.51169, 5.87820, -0.17030, -0.05035, 0.29717, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 18.79401)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 7.32106)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 5.32935)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 18.85548)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 7.45996)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 5.87402)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 18.84591)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 7.58808)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 6.37788)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 18.76490)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 7.70154)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 6.82476)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 18.62792)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 7.79748)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.20280)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.46041)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.87413)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.50483)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.29175)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.93100)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.72875)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.14940)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.96892)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.87792)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.05286)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.99019)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.96151)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.00778)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.99870)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.99489)<0.01) ;
p_buffer = interiorPosition(1.65796, 18.09119, 5.44573, 8.19289, 4.02814, -1.89901, 3.51647, 0.13587, -0.34089, -0.24220, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 18.67230)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 5.18580)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.69637)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 19.11830)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 5.06739)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.07547)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 19.35867)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 5.16106)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.27058)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 19.38271)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 5.46858)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.27438)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 19.22401)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 5.94171)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.11815)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.94501)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 6.50107)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.85816)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.62153)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.05490)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.56201)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.32726)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.51788)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.29497)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.11830)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.82993)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.10637)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.01771)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.97502)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.01589)<0.01) ;
p_buffer = interiorPosition(1.58031, 16.42376, 7.80660, 8.83218, -2.23230, 4.39011, 2.49849, -0.28260, 0.18630, -0.17445, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 16.12519)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.41239)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 9.16862)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 15.94523)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.88722)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.39853)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 15.94397)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.16154)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.47180)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.12516)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.22353)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.38476)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 16.45137)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.10433)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.16774)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 16.85920)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.86313)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.87270)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.27446)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.57244)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.56086)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.62740)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.30323)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.29029)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.86787)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.11011)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.10357)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.98051)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01654)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.01535)<0.01) ;
p_buffer = interiorPosition(1.50663, 19.64260, 8.78289, 6.47776, 2.48887, 2.26230, 0.45984, 0.37805, -0.15930, -0.06385, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 19.96051)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 9.07295)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 6.54747)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 20.15371)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 9.26903)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 6.65143)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 20.15837)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.32694)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 6.80409)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 19.97027)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.24360)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.00182)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 19.62871)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.04602)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.22822)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 19.20048)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.78035)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.45944)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.76382)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.50086)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.66948)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.39239)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.25899)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.83549)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.13919)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.09233)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.94312)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.02053)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01367)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.99178)<0.01) ;
p_buffer = interiorPosition(1.77136, 16.99928, 4.70806, 8.64384, -0.65754, -3.63563, 2.49570, -0.22180, -0.29711, -0.19844, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 16.90240)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 4.16682)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 9.02200)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 16.85866)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 3.85631)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.28966)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 16.89616)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 3.89071)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.39518)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 17.01610)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 4.27542)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.33415)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.20007)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 4.93653)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.13684)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.41744)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 5.75030)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.85568)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.63264)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 6.57258)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.55274)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.81258)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.26829)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.28718)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.93388)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.74089)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.10276)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99029)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.96183)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.01526)<0.01) ;
p_buffer = interiorPosition(1.64292, 16.60092, 9.91775, 9.79274, 4.42122, 1.33025, 3.62153, 0.31557, -0.09333, -0.19849, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 17.24412)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 10.09443)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 10.29660)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 17.78935)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 10.16570)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 10.62308)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 18.17901)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 10.08378)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 10.68888)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 18.39783)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.84937)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 10.48920)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 18.46262)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.49825)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 10.07673)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.41191)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 9.08796)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 9.54047)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.29571)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.68440)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.98464)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.16517)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.34848)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.50755)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.06229)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.12274)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.18050)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.00963)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01800)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.02668)<0.01) ;
p_buffer = interiorPosition(1.43755, 18.15723, 8.48380, 7.65957, -2.67959, 4.45688, 2.23675, -0.35993, 0.11715, -0.05722, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 17.81904)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 9.03835)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.94094)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 17.55060)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 9.45032)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.16865)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 17.39155)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.64701)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.31510)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 17.34943)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.61910)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.37497)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.40785)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.40406)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.35958)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.53468)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 9.06954)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.29123)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.69023)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.69688)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.19768)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.83546)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.36443)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.10641)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.94012)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.13106)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.03910)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99099)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01954)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.00593)<0.01) ;
p_buffer = interiorPosition(1.33692, 16.73031, 4.67258, 7.71535, -2.32539, 6.96349, 2.70005, -0.20240, 0.27471, 0.00901, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 16.46722)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 5.50510)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.03105)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 16.30559)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 6.25921)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.28383)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 16.29582)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 6.88437)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.44083)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.44095)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 7.35925)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.49599)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 16.70943)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 7.68568)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.46320)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.04786)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.88245)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.36953)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.39379)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.97929)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.24841)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.68843)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.01067)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.13284)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.88944)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.00973)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.04857)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.98369)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.00214)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.00734)<0.01) ;
p_buffer = interiorPosition(1.34158, 16.68479, 7.64239, 7.65692, -1.63248, 3.64061, -0.78345, -0.21685, 0.12592, -0.31148, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 16.50178)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.07001)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.56606)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 16.40326)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.41218)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.50550)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 16.43101)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 8.62338)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.49265)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.58665)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 8.69505)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.52950)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 16.84252)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 8.64626)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.60673)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.15265)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.51428)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.70776)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.46362)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.34517)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.81291)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.72554)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.18438)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.90342)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.90295)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.06737)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.96561)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.98572)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01017)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.99491)<0.01) ;
p_buffer = interiorPosition(1.76254, 18.89249, 5.34356, 8.39282, 5.11131, -2.00772, 2.44105, 0.17091, -0.23047, -0.23968, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 19.67145)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 5.05106)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.76196)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 20.24370)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 4.91176)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.03060)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 20.50344)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 5.00080)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.15221)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 20.43760)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 5.31995)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.12231)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 20.10153)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 5.81764)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.96738)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 19.59467)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 6.40904)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.73376)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 19.03621)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 6.99609)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.47658)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.54080)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.48757)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.24861)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.19419)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.81916)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.08923)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.02892)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.97343)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.01329)<0.01) ;
p_buffer = interiorPosition(1.59369, 17.58355, 6.25005, 4.61632, 6.60722, 2.69217, 0.85062, 0.11763, 0.09730, -0.22328, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 18.50254)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 6.63520)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 4.75448)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 19.22551)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 6.99118)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 4.97176)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 19.65005)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 7.29759)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 5.30302)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 19.75874)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 7.54416)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 5.74091)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 19.59741)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 7.72891)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 6.24821)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 19.25331)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.85623)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 6.77011)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.83332)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.93509)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.24651)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.44220)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.97712)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.62436)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.16079)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.99480)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.86994)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.02418)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.99958)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.98119)<0.01) ;
p_buffer = interiorPosition(2.04856, 14.92798, 9.43234, 8.72668, -6.54442, 4.58039, 1.65344, -0.12966, 0.02741, -0.27524, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 13.78091)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 10.23902)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 9.01279)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 12.99770)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 10.81315)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.20488)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 12.75897)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 11.03914)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.26256)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 13.08047)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 10.90512)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.18412)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 13.85698)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 10.47550)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.99613)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 14.90620)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 9.86358)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.74305)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 16.01268)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 9.20407)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.47681)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 16.97170)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.62574)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.24649)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.63320)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.22396)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.08785)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.94565)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.03327)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.01301)<0.01) ;
p_buffer = interiorPosition(1.39022, 16.64423, 7.38249, 5.06686, 2.53764, 5.49738, 1.72388, -0.20513, 0.28074, -0.11138, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 16.95852)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.05257)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 5.29367)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 17.24447)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.59134)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 5.56546)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 17.48628)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 8.92766)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 5.89907)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 17.67677)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.04773)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 6.28575)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.81566)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 8.98052)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 6.69906)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.90793)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.78330)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.10269)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.96213)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.52706)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.45826)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.98869)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.28206)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.73320)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.99825)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.10320)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.90857)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.00001)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01559)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.98689)<0.01) ;
p_buffer = interiorPosition(1.06231, 18.24787, 6.60601, 5.84008, -2.66333, 2.15777, 2.80067, -0.40493, -0.00946, -0.04736, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 17.99889)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 6.81433)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 6.11263)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 17.79717)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 7.02128)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 6.39447)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 17.66970)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 7.22280)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 6.68528)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 17.62209)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 7.41281)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 6.97659)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.64399)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 7.58433)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.25480)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.71445)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.73057)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.50416)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.80733)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.84608)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.70983)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.89669)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.92783)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.86091)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.96215)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.97632)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.95344)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99427)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.99674)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.99346)<0.01) ;
p_buffer = interiorPosition(1.31774, 17.96116, 6.01748, 6.63592, -3.45905, 0.42802, 4.02005, -0.36791, -0.08477, 0.01500, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 17.56320)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 6.07899)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.10540)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 17.25562)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 6.19198)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.51269)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 17.08758)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 6.37855)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.82261)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 17.06714)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 6.63443)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.02450)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.17185)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 6.93658)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.12640)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.35937)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.25089)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.14936)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.57807)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.53983)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.12162)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.77760)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.77010)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.07295)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.91954)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.92026)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.02879)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.98794)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.98845)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.00459)<0.01) ;
p_buffer = interiorPosition(0.99711, 15.85879, 7.83796, 6.79139, 3.40933, -1.67489, 2.41635, 0.24780, -0.28078, -0.04827, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 16.16904)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 7.69298)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.00858)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 16.48036)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 7.58569)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.21604)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 16.78680)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 7.53630)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.40610)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 17.07875)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 7.54758)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.57293)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.34475)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 7.60939)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.71254)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.57343)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.70327)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.82285)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.75533)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.80702)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.90374)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.88485)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.89922)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.95703)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.96210)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.96379)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.98656)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99476)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.99460)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.99823)<0.01) ;
p_buffer = interiorPosition(1.40887, 16.51122, 5.77297, 7.82046, 5.95916, -0.68434, 1.44103, 0.31555, -0.07161, -0.11933, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 17.25271)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 5.70325)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.99738)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 17.87586)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 5.72330)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.13883)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 18.31357)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 5.87414)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.22748)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 18.54912)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 6.15334)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.26031)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 18.60375)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 6.52723)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.24502)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.52439)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 6.94305)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.19632)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.37125)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.34108)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.13232)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.20553)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.66687)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.07088)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.07704)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.88333)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.02595)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.01185)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.98297)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.00392)<0.01) ;
p_buffer = interiorPosition(1.78768, 15.99687, 6.89342, 9.66088, -3.32687, 2.12170, 4.74405, -0.35399, 0.06162, -0.05070, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 15.48943)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 7.23097)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 10.38677)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 15.16127)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 7.52863)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 10.89005)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 15.10449)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 7.76238)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 11.06213)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 15.32651)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 7.92402)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 10.89347)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 15.77273)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 8.01753)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 10.44717)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 16.34922)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.05549)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 9.83274)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 16.94535)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.05547)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 9.17972)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.45650)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.03644)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.61136)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.80674)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.01514)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.21833)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.97144)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.00250)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.03238)<0.01) ;
p_buffer = interiorPosition(1.55917, 18.30106, 7.23024, 6.64929, -0.70164, 6.13172, -2.97380, -0.20118, 0.20204, -0.22196, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 18.20247)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.06787)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 6.25337)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 18.11474)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.74062)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 5.99147)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 18.04657)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.16013)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 5.93127)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 18.00109)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.30946)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 6.07834)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.97710)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.22501)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 6.39269)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.97044)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.97836)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 6.80541)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.97514)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.65820)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.23527)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.98484)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.35218)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.60532)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.99395)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.12884)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.85949)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99903)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01947)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.97921)<0.01) ;
p_buffer = interiorPosition(1.44753, 17.23069, 5.50685, 9.21112, -2.12504, 3.45813, 2.92764, -0.35355, 0.17703, -0.06685, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 16.96601)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 5.95942)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 9.57117)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 16.78512)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 6.39256)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.80768)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 16.73252)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 6.78841)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.86133)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.81284)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 7.13402)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.72818)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.00139)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 7.42111)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.44475)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.25478)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.64595)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 9.07327)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.52148)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.80918)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.68678)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.75245)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.91555)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.35432)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.91171)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.97383)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.12610)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.98692)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.99659)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.01865)<0.01) ;
p_buffer = interiorPosition(1.29053, 15.35328, 8.87274, 6.71996, 2.43354, 2.19481, 3.96897, 0.34911, -0.17062, 0.04350, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 15.64537)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 9.11239)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.17380)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 15.96074)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 9.26690)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.56639)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 16.30187)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.29645)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.86305)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.65799)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.19884)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.05341)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.00963)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 8.99943)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.14576)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.33323)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.74095)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.16123)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.60577)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.47341)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.12805)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.80932)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.24395)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.07580)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.93567)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.08674)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.02968)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99090)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01282)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.00471)<0.01) ;
p_buffer = interiorPosition(1.56331, 18.22908, 7.70977, 8.71704, 3.08490, 4.92384, 3.30519, 0.01781, 0.28554, -0.17073, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 18.64695)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.38297)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 9.16023)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 18.96140)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.91378)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.47628)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 19.12008)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.22545)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.60422)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 19.11595)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.30440)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.53827)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 18.97554)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.18408)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.31320)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.74703)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.92878)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.98973)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.48852)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.61748)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.63996)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.25615)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.32766)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.33275)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.09230)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.11914)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.11914)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.01379)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01792)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.01770)<0.01) ;
p_buffer = interiorPosition(1.37455, 17.04800, 6.25255, 7.08803, 0.23398, -0.75080, 5.21530, -0.23842, -0.28893, 0.11527, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 17.08077)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 6.17255)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.71782)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 17.13617)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 6.16725)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.23422)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 17.22564)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 6.27317)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.57612)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 17.34773)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 6.48964)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.73047)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.49183)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 6.78908)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.72026)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.64183)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.12739)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.59249)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.77985)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.45423)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.40613)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.88995)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.72334)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.22010)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.96181)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.90290)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.08127)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99447)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.98580)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.01237)<0.01) ;
p_buffer = interiorPosition(1.20584, 18.47859, 7.88139, 6.62635, -1.67679, 3.56806, 0.28966, -0.37828, 0.09579, -0.16258, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 18.29799)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.25661)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 6.66495)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 18.14093)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.55014)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 6.73965)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 18.02334)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 8.71936)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 6.86669)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 17.95018)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 8.75724)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.04340)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 17.91810)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 8.68314)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.25368)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 17.91798)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.53375)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.47347)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.93752)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.35390)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.67616)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.96384)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.18742)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.83803)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.98603)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.06805)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.94377)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.99780)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01022)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.99185)<0.01) ;
p_buffer = interiorPosition(1.74932, 14.36051, 9.07962, 7.38622, -0.64790, 2.89406, 6.10727, 0.09913, -0.11555, 0.22216, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 14.28668)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 9.51157)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.32105)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 14.35226)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 9.80708)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.06416)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 14.61787)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.90106)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.51294)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 15.07792)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.78840)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.64869)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 15.67925)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.50808)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.51522)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 16.33991)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 9.12707)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 9.19745)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 16.96776)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.72436)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.80005)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.47922)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.37494)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.42602)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.81792)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.13377)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.15530)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.97346)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01982)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.02340)<0.01) ;
p_buffer = interiorPosition(1.66977, 16.21097, 8.65644, 9.01434, -1.92336, 5.70607, -0.62823, -0.07986, 0.24765, -0.22287, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 15.94277)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 9.48255)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.91460)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 15.79502)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 10.09956)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.80172)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 15.82583)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 10.39909)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.67459)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 16.03718)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 10.36655)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.53782)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 16.39016)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 10.05666)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.39983)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 16.82029)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 9.56896)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.27085)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 17.25268)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 9.02336)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.16097)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 17.61740)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.53559)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.07820)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 17.86466)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.19273)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.02648)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.98008)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.02875)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.00376)<0.01) ;
p_buffer = interiorPosition(1.47612, 18.27395, 9.48391, 6.64401, 3.40860, 2.36530, 3.94758, 0.09272, -0.32701, 0.23093, 18.00000, 8.00000, 8.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000);
 assert (abs(p_buffer[0*3 + 0] - 18.71017)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 9.77553)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.16097)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 19.03783)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 9.94817)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.60626)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 19.20126)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 9.94840)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.93753)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 19.19292)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.77494)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.14243)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 19.04084)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.46454)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.23149)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.79608)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 9.07775)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.23092)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.52017)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.68480)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.17550)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.27259)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.35138)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.10142)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.09818)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.12452)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.03911)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.01466)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.01835)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.00614)<0.01) ;

}
void QuadOptimalControl::test_interiorPositionPartialFinalState(){
  double* p_buffer;
  p_buffer = interiorPositionPartialFinalState(1.09187, 2.21472, 1.83794, 5.07714, 0.46773, -0.35302, 6.70297, 0.01939, -0.01464, 0.27792, 1.79320, 1.24409, 4.70410);
 assert (abs(p_buffer[0*3 + 0] - 2.25960)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 1.80248)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 5.73021)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 2.29573)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 1.76496)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 6.31163)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 2.31651)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 1.72398)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 6.76666)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 2.31771)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 1.67864)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.05997)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 2.29717)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 1.62851)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.17353)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 2.25455)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 1.57351)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.10445)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 2.19108)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 1.51393)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 6.86278)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 2.10928)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 1.45034)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 6.46938)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 2.01271)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 1.38351)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 5.95376)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 1.90573)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 1.31441)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 5.35190)<0.01) ;
p_buffer = interiorPositionPartialFinalState(0.91462, 18.17906, 3.09023, 1.66931, 3.72397, -0.35018, -2.35173, 0.07955, 0.24939, -0.24797, 17.22902, 2.61191, 0.36062);
 assert (abs(p_buffer[0*3 + 0] - 18.48134)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 3.06156)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 1.47453)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 18.74255)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 3.03228)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 1.28684)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 18.93209)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 3.00067)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 1.11276)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 19.03022)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 2.96554)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 0.95656)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 19.02690)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 2.92621)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 0.82045)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.92056)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 2.88245)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 0.70492)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.71688)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 2.83440)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 0.60891)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.42761)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 2.78253)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 0.53015)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.06934)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 2.72753)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 0.46530)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 17.66226)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 2.67032)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 0.41031)<0.01) ;
p_buffer = interiorPositionPartialFinalState(1.09725, 9.56775, 3.52871, 7.91267, -1.09316, -7.45936, -0.30922, -0.18992, -0.27624, -0.08249, 9.42137, 3.31865, 6.98860);
 assert (abs(p_buffer[0*3 + 0] - 9.45976)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 2.79740)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.88047)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 9.36078)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 2.14042)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.84227)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 9.27888)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 1.61451)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.79431)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 9.21931)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 1.25626)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.73418)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 9.18480)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 1.08433)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.66070)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 9.17591)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 1.10173)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.57375)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 9.19132)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 1.29802)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.47413)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 9.22815)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 1.65158)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.36342)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 9.28225)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 2.13182)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.24378)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 9.34856)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 2.70144)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.11786)<0.01) ;
p_buffer = interiorPositionPartialFinalState(0.97096, 4.55632, 7.53805, 4.03217, -0.32246, 3.23971, 4.93126, -0.21481, -0.12667, 0.27537, 4.99663, 7.51436, 4.25734);
 assert (abs(p_buffer[0*3 + 0] - 4.52848)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 7.81808)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 4.46039)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 4.50691)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.06751)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 4.84641)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 4.49750)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 8.26455)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 5.15756)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 4.50409)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 8.39524)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 5.37275)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 4.52871)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 8.45253)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 5.48119)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 4.57179)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.43543)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 5.48107)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 4.63240)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.34813)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 5.37832)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 4.70848)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.19917)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 5.18528)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 4.79706)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.00054)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 4.91944)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 4.89448)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.76683)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 4.60215)<0.01) ;
p_buffer = interiorPositionPartialFinalState(1.00731, 9.54616, 1.15267, 6.40061, -1.91704, -3.79450, 3.91246, -0.07792, 0.06406, 0.28156, 9.30265, 1.00842, 5.76629);
 assert (abs(p_buffer[0*3 + 0] - 9.37328)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 0.81183)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 6.75189)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 9.21608)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 0.50619)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.06096)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 9.08660)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 0.26127)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.29498)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 8.99259)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 0.09342)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.43274)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 8.93803)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 0.01095)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.46338)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 8.92356)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 0.01506)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.38508)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 8.94699)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 0.10090)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.20378)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 9.00374)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 0.25854)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 6.93187)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 9.08735)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 0.47401)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 6.58693)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 9.18993)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 0.73031)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 6.19039)<0.01) ;
p_buffer = interiorPositionPartialFinalState(1.10340, 1.10371, 7.37521, 6.94332, 1.48135, 5.84570, 4.23771, 0.47437, 0.04100, -0.18531, 0.67126, 7.44950, 6.91943);
 assert (abs(p_buffer[0*3 + 0] - 1.25068)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 7.95064)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.35943)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 1.38051)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.46571)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.72991)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 1.47699)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 8.87571)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.02261)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 1.52953)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.15188)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.21693)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 1.53254)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.27963)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.30249)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 1.48483)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 9.25672)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.27789)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 1.38895)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 9.09159)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.14941)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 1.25059)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.80147)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.92972)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 1.07794)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.41073)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.63664)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 0.88105)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.94901)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.29181)<0.01) ;
p_buffer = interiorPositionPartialFinalState(0.80456, 4.84805, 7.06991, 8.08296, -1.73788, -1.47326, -0.96343, -0.17694, -0.27376, -0.28059, 4.82351, 8.26282, 7.99403);
 assert (abs(p_buffer[0*3 + 0] - 4.72294)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 6.96569)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.01306)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 4.61035)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 6.88325)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.94889)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 4.52025)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 6.83975)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.89578)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 4.45904)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 6.84626)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.85723)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 4.43005)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 6.90849)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.83509)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 4.43386)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 7.02744)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.82975)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 4.46871)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 7.20007)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.84038)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 4.53091)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 7.41996)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.86510)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 4.61520)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.67801)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.90123)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 4.71513)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 7.96312)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.94545)<0.01) ;
p_buffer = interiorPositionPartialFinalState(0.91257, 2.17094, 6.28742, 8.26441, 3.88911, -1.57261, 2.96795, 0.24541, -0.31100, -0.11088, 1.89837, 6.32979, 8.84346);
 assert (abs(p_buffer[0*3 + 0] - 2.48763)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 6.15864)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.50661)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 2.76892)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 6.04276)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.72819)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 2.98752)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 5.95089)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.91458)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 3.12578)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 5.89027)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.05641)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 3.17467)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 5.86464)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.14896)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 3.13269)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 5.87475)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 9.19156)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 3.00478)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 5.91874)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 9.18705)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 2.80126)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 5.99260)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 9.14113)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 2.53676)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 6.09056)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 9.06184)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 2.22913)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 6.20560)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.95898)<0.01) ;
p_buffer = interiorPositionPartialFinalState(0.86237, 6.18303, 5.88970, 8.01574, -1.77417, -1.12467, 4.92454, -0.29225, -0.00028, 0.23586, 5.17422, 5.58748, 8.30152);
 assert (abs(p_buffer[0*3 + 0] - 6.04410)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 5.80269)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.39551)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 5.90918)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 5.72201)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.73846)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 5.78256)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 5.65233)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.01640)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 5.66709)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 5.59665)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.21112)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 5.56427)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 5.55649)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.31332)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 5.47449)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 5.53209)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 9.32146)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 5.39712)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 5.52257)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 9.24066)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 5.33072)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 5.52614)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 9.08159)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 5.27322)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 5.54027)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.85938)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 5.22202)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 5.56186)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.59247)<0.01) ;
p_buffer = interiorPositionPartialFinalState(1.03961, 4.02737, 7.68569, 6.29277, 4.77848, 2.76706, 4.47054, 0.22940, -0.27494, 0.03636, 3.67958, 8.51211, 6.93440);
 assert (abs(p_buffer[0*3 + 0] - 4.47057)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 7.94262)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 6.70843)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 4.86435)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.17878)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.08621)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 5.17083)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 8.38076)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.39801)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 5.36554)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 8.54004)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.62573)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 5.43601)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 8.65237)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.76018)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 5.38019)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.71731)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.79995)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 5.20503)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.73766)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.75032)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 4.92491)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.71890)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.62211)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 4.56023)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.66870)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 7.43060)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 4.13583)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.59632)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.19442)<0.01) ;
p_buffer = interiorPositionPartialFinalState(1.36999, 19.19734, 5.80104, 5.11989, -1.00293, 9.25760, 6.39612, -0.07370, 0.24638, 0.22177, 18.73722, 5.52770, 5.32205);
 assert (abs(p_buffer[0*3 + 0] - 19.07355)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 6.93299)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 5.90298)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 18.95786)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 7.94373)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 6.60645)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 18.85707)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 8.74126)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.16920)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 18.77560)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 9.26631)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 7.55180)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 18.71575)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 9.48873)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 7.73416)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 18.67793)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 9.40378)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 7.71307)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 18.66097)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 9.02860)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 7.49981)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 18.66237)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.39846)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 7.11770)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 18.67854)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 7.56322)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 6.59975)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 18.70513)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 6.58362)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 5.98618)<0.01) ;
p_buffer = interiorPositionPartialFinalState(0.84378, 13.51222, 2.96859, 2.29252, 5.09078, -0.89464, 2.37070, 0.07033, 0.10466, 0.35839, 14.64853, 3.02165, 2.11139);
 assert (abs(p_buffer[0*3 + 0] - 13.89739)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 2.90162)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 2.47144)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 14.25281)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 2.84265)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 2.63078)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 14.55626)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 2.79707)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 2.75451)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 14.79344)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 2.76836)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 2.83227)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 14.95705)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 2.75824)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 2.85867)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 15.04595)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 2.76694)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 2.83274)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 15.06423)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 2.79338)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 2.75724)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 15.02040)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 2.83540)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 2.63808)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 14.92646)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 2.88997)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 2.48365)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 14.79704)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 2.95342)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 2.30424)<0.01) ;
p_buffer = interiorPositionPartialFinalState(1.10023, 1.61752, 1.67077, 8.59321, -2.54457, -0.27755, 6.48666, -0.32518, 0.00835, -0.02732, 1.98857, 1.80824, 8.38746);
 assert (abs(p_buffer[0*3 + 0] - 1.36719)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 1.64382)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 9.22910)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 1.14528)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 1.62112)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.79507)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 0.97515)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 1.60573)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 10.23994)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 0.87194)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 1.59962)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 10.53078)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 0.84347)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 1.60379)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 10.65092)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 0.89114)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 1.61838)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 10.59787)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 1.01091)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 1.64279)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 10.38135)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 1.19411)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 1.67584)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 10.02123)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 1.42846)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 1.71584)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 9.54548)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 1.69890)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 1.76074)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.98818)<0.01) ;
p_buffer = interiorPositionPartialFinalState(0.88998, 14.38951, 8.87216, 6.41993, -2.16716, -2.87381, -3.83161, -0.09277, -0.28127, -0.25264, 15.02720, 9.03308, 5.15781);
 assert (abs(p_buffer[0*3 + 0] - 14.21838)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.64362)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 6.11298)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 14.07130)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.43991)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 5.82555)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 13.96640)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 8.28071)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 5.57325)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 13.91538)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 8.17872)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 5.36618)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 13.92422)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 8.14049)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 5.20954)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 13.99386)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.16717)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 5.10427)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 14.12098)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.25526)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 5.04761)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 14.29866)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.39742)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 5.03375)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 14.51711)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.58319)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 5.05443)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 14.76441)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.79985)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 5.09956)<0.01) ;
p_buffer = interiorPositionPartialFinalState(0.69989, 5.50611, 4.29994, 9.85953, -1.01623, -3.65776, 1.45312, -0.20895, -0.30521, -0.18907, 4.57656, 3.77138, 9.95459);
 assert (abs(p_buffer[0*3 + 0] - 5.44073)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 4.07023)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 9.95006)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 5.37282)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 3.85912)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 10.03146)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 5.30120)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 3.68124)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 10.09757)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 5.22511)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 3.54606)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 10.14447)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 5.14419)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 3.45845)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 10.17017)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 5.05848)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 3.41927)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 10.17443)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 4.96826)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 3.42596)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 10.15847)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 4.87412)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 3.47305)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 10.12473)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 4.77683)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 3.55282)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 10.07665)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 4.67730)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 3.65580)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 10.01838)<0.01) ;
p_buffer = interiorPositionPartialFinalState(0.99407, 2.89814, 5.11724, 8.10267, -3.47759, 1.72082, 3.85428, -0.39242, -0.08751, -0.12647, 2.63033, 5.11656, 7.33657);
 assert (abs(p_buffer[0*3 + 0] - 2.58810)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 5.26948)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.44254)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 2.30666)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 5.40508)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.73821)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 2.07730)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 5.51237)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.95795)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 1.91521)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 5.58386)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.08138)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 1.82825)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 5.61576)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.09821)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 1.81787)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 5.60757)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 9.00695)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 1.87997)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 5.56155)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.81370)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 2.00590)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 5.48233)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.53084)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 2.18330)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 5.37636)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.17580)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 2.39709)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 5.25150)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 7.76980)<0.01) ;
p_buffer = interiorPositionPartialFinalState(1.01759, 0.69625, 8.50182, 7.27522, -0.78497, 6.33119, -1.00446, -0.10796, 0.19154, 0.02392, 1.26694, 8.66969, 6.58820);
 assert (abs(p_buffer[0*3 + 0] - 0.62564)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 9.07725)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 7.18297)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 0.56755)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 9.59395)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 7.09401)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 0.53189)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 10.00747)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 7.01060)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 0.52507)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 10.28918)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 6.93420)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 0.55037)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 10.42445)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 6.86553)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 0.60838)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 10.41098)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 6.80468)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 0.69731)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 10.25696)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 6.75122)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 0.81345)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 9.97937)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 6.70422)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 0.95152)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 9.60221)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 6.66244)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 1.10510)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 9.15472)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 6.62434)<0.01) ;
p_buffer = interiorPositionPartialFinalState(1.04207, 11.28194, 2.48332, 4.39926, -0.99668, -0.87809, 6.61229, -0.13200, 0.06011, 0.32330, 10.79095, 2.62279, 4.49972);
 assert (abs(p_buffer[0*3 + 0] - 11.18798)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 2.40220)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 5.01504)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 11.09861)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 2.33137)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 5.56783)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 11.01808)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 2.27802)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 6.00915)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 10.94918)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 2.24671)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 6.30767)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 10.89338)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 2.23978)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 6.44739)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 10.85098)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 2.25750)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 6.42568)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 10.82131)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 2.29849)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 6.25139)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 10.80286)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 2.35989)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 5.94292)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 10.79348)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 2.43773)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 5.52632)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 10.79051)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 2.52717)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 5.03339)<0.01) ;
p_buffer = interiorPositionPartialFinalState(1.04909, 6.99573, 5.02293, 9.01519, 7.29653, -1.21574, -0.72933, 0.29259, -0.10049, -0.10102, 7.71524, 5.52477, 8.91674);
 assert (abs(p_buffer[0*3 + 0] - 7.68063)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 4.90970)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 8.94642)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 8.30104)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 4.81288)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 8.88349)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 8.80754)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 4.74521)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 8.83142)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 9.16822)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 4.71494)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 8.79344)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 9.36679)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 4.72628)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 8.77124)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 9.40061)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 4.77993)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 8.76515)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 9.27872)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 4.87360)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 8.77433)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 9.01992)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 5.00244)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 8.79694)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 8.65079)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 5.15965)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.83041)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 8.20379)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 5.33687)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.87153)<0.01) ;
p_buffer = interiorPositionPartialFinalState(1.06259, 14.29897, 1.78084, 8.89814, -3.93497, 1.23349, 3.32790, -0.20726, 0.30421, 0.08696, 14.38290, 0.52807, 7.74192);
 assert (abs(p_buffer[0*3 + 0] - 13.92549)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 1.89670)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 9.21177)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 13.59152)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 1.98970)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 9.48124)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 13.32756)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 2.04087)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 9.67348)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 13.15332)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 2.03792)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 9.76718)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 13.07886)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 1.97449)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 9.75150)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 13.10586)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 1.84940)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 9.62474)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 13.22874)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 1.66594)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 9.39307)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 13.43595)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 1.43109)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 9.06919)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 13.71110)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 1.15480)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 8.67103)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 14.03422)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 0.84924)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 8.22045)<0.01) ;
p_buffer = interiorPositionPartialFinalState(0.94110, 14.38951, 8.87216, 6.41993, -2.16716, -2.87381, -3.83161, -0.09277, -0.28127, -0.25264, 14.53453, 8.55052, 6.64115);
 assert (abs(p_buffer[0*3 + 0] - 14.20762)<0.01) ;
 assert (abs(p_buffer[0*3 + 1] - 8.62959)<0.01) ;
 assert (abs(p_buffer[0*3 + 2] - 6.09802)<0.01) ;
 assert (abs(p_buffer[1*3 + 0] - 14.04612)<0.01) ;
 assert (abs(p_buffer[1*3 + 1] - 8.40856)<0.01) ;
 assert (abs(p_buffer[1*3 + 2] - 5.81148)<0.01) ;
 assert (abs(p_buffer[2*3 + 0] - 13.92051)<0.01) ;
 assert (abs(p_buffer[2*3 + 1] - 8.22649)<0.01) ;
 assert (abs(p_buffer[2*3 + 2] - 5.58771)<0.01) ;
 assert (abs(p_buffer[3*3 + 0] - 13.84079)<0.01) ;
 assert (abs(p_buffer[3*3 + 1] - 8.09462)<0.01) ;
 assert (abs(p_buffer[3*3 + 2] - 5.44442)<0.01) ;
 assert (abs(p_buffer[4*3 + 0] - 13.81207)<0.01) ;
 assert (abs(p_buffer[4*3 + 1] - 8.01880)<0.01) ;
 assert (abs(p_buffer[4*3 + 2] - 5.39068)<0.01) ;
 assert (abs(p_buffer[5*3 + 0] - 13.83518)<0.01) ;
 assert (abs(p_buffer[5*3 + 1] - 8.00004)<0.01) ;
 assert (abs(p_buffer[5*3 + 2] - 5.42801)<0.01) ;
 assert (abs(p_buffer[6*3 + 0] - 13.90728)<0.01) ;
 assert (abs(p_buffer[6*3 + 1] - 8.03530)<0.01) ;
 assert (abs(p_buffer[6*3 + 2] - 5.55146)<0.01) ;
 assert (abs(p_buffer[7*3 + 0] - 14.02247)<0.01) ;
 assert (abs(p_buffer[7*3 + 1] - 8.11812)<0.01) ;
 assert (abs(p_buffer[7*3 + 2] - 5.75067)<0.01) ;
 assert (abs(p_buffer[8*3 + 0] - 14.17240)<0.01) ;
 assert (abs(p_buffer[8*3 + 1] - 8.23932)<0.01) ;
 assert (abs(p_buffer[8*3 + 2] - 6.01099)<0.01) ;
 assert (abs(p_buffer[9*3 + 0] - 14.34688)<0.01) ;
 assert (abs(p_buffer[9*3 + 1] - 8.38765)<0.01) ;
 assert (abs(p_buffer[9*3 + 2] - 6.31450)<0.01) ;

}
// can't test, no good source reference
void QuadOptimalControl::test_interiorStatePartialFinalState(){;}

void QuadOptimalControl::test_time(){
  double val;
  val = 1.7223 - time(18.7000, 4.7846,7.2198,-0.8741,-1.0425,7.6645,-0.1453,-0.1386,0.2679,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);
  std::cout << val;
  /*
  assert (abs(val)<0.01);
val = 1.8577 - time(15.3211, 6.3569,8.0296,-4.8076,3.5490,-5.4770,-0.0944,0.1123,-0.3205,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.4465 - time(17.0266, 6.1175,4.7651,-3.9207,1.9819,3.4683,-0.2969,-0.0663,0.1882,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.7654 - time(19.1465, 7.4146,6.6332,7.3269,0.5883,0.2657,0.3228,-0.0392,-0.0927,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.3114 - time(17.8767, 5.5236,5.8818,-2.2313,0.6406,5.6153,-0.2209,-0.1083,0.2505,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.7287 - time(16.1018, 9.8861,6.0682,3.6207,5.2779,6.2231,0.1320,0.1362,0.2564,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.7490 - time(18.0842, 5.3225,9.3725,2.6046,-1.1401,5.0086,0.3475,-0.1257,-0.0462,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.7218 - time(18.3736, 5.1971,6.3124,0.1558,1.3367,-5.7443,-0.1551,0.0278,-0.3538,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.4774 - time(17.2527, 4.9426,7.8819,5.6832,3.4177,4.7259,-0.0636,0.7960,-0.6885,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.9349 - time(17.6042, 6.2585,5.3615,-1.5891,2.8409,-7.3175,-0.1640,0.0553,-0.3217,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 2.1235 - time(17.9970, 6.5858,4.3633,-1.1732,3.1840,-8.7740,-0.1410,0.0570,-0.3215,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.2074 - time(17.0383, 5.8920,8.0793,-1.5024,3.3739,-2.3618,-0.2366,0.1082,-0.3209,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.4178 - time(16.4572, 5.2432,8.5864,-2.5259,2.2090,-1.1882,-0.2904,0.0758,-0.3043,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.5017 - time(17.6996, 6.3837,4.3778,-3.4180,-2.0305,3.5701,-0.2400,-0.1670,0.2224,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.4880 - time(16.9492, 8.5040,8.3337,3.3773,5.3399,0.5216,0.2616,0.1366,0.0778,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 2.0995 - time(17.2481, 4.5207,7.4922,-4.1906,-5.0035,8.1505,-0.1700,-0.1660,0.2335,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.7739 - time(16.4773, 5.1708,9.9932,2.3170,-2.1228,4.0802,0.1940,-0.1720,0.2110,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.5966 - time(18.9277, 7.5478,9.0103,4.3268,3.9146,1.8977,0.2815,0.1405,-0.1607,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.9005 - time(18.6658, 5.1116,6.0951,4.2118,-3.1416,-3.6186,0.0775,-0.2391,-0.2381,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.9449 - time(18.6790, 4.4110,6.8227,4.1840,-4.4956,-2.2120,0.0752,-0.2790,-0.1880,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.6033 - time(17.1847, 5.4978,8.7416,2.5473,-1.9145,3.4245,0.0433,-0.3875,-0.0079,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.6860 - time(17.0621, 8.6372,4.3071,5.8658,2.7805,-0.5158,0.2604,-0.1730,-0.0482,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.1789 - time(18.0677, 8.5996,5.5618,-3.2750,-2.5164,2.9047,-0.3058,-0.1746,0.1140,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.5018 - time(17.2205, 8.9022,5.3360,-4.9390,-1.9538,2.3515,-0.3220,-0.1389,0.0853,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.3340 - time(16.4521, 6.9925,8.0895,1.5785,4.9008,3.8901,-0.0417,0.1176,0.0482,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.2203 - time(18.2435, 5.5230,5.6476,-1.3957,0.8403,5.3376,-0.2118,-0.1118,0.2654,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.3200 - time(17.7835, 9.6560,6.2613,-3.8539,-0.4972,4.1937,-0.3131,-0.1035,0.1511,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.0655 - time(17.0040, 8.1772,5.8824,5.0000,0.9126,3.4302,0.1675,-0.2426,0.1722,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.6306 - time(18.5566, 4.6637,6.6261,3.7774,4.4746,-4.1161,0.0423,0.1591,-0.2990,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.7187 - time(19.2823, 9.7179,7.6774,3.0171,4.2738,2.8294,-0.1862,0.3151,-0.0580,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.0402 - time(16.3840, 7.3680,6.4368,2.9831,-1.4408,4.3409,0.0490,-0.3048,0.1825,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.6848 - time(18.9367, 6.0455,7.6949,5.9834,-0.8903,0.0006,0.1932,-0.2329,-0.1671,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.2398 - time(16.1482, 8.7445,6.2106,3.2437,2.9039,4.6100,0.0853,-0.1581,0.2747,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.3500 - time(17.7378, 7.5095,7.3734,4.5359,4.3838,1.3367,0.2551,-0.0146,-0.2458,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.4090 - time(18.6777, 9.0609,6.4037,0.0225,1.5802,-1.6717,-0.3121,0.0443,-0.3199,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.1733 - time(17.8976, 8.6954,4.1455,0.4955,-1.4984,4.1404,-0.0389,-0.3369,0.1806,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.5727 - time(17.2754, 9.3784,6.2154,-0.5988,-1.2698,-4.1113,-0.1394,-0.1494,-0.3172,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.4549 - time(16.3416, 7.9723,4.5599,4.7336,1.8286,0.2364,0.2458,-0.3100,0.0013,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.6838 - time(16.9547, 5.9428,6.7863,3.2771,-4.6727,4.2347,0.0434,-0.3127,0.1240,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.2163 - time(16.6890, 5.1465,5.9125,-0.1324,7.6571,1.5478,-0.1339,0.3101,0.0155,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
val = 1.5037 - time(18.7267, 6.1001,6.6221,5.1377,1.3499,2.1225,0.2201,-0.3852,-0.1720,18.0000,8.0000,8.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000);assert (abs(val)<0.01);
*/

}
void QuadOptimalControl::test_timePartialFinalState(){;}

